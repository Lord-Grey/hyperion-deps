name: Build Dependencies

on:
  # Reusable from push_pull.yml
  workflow_call:
    inputs:
      build_type:
        type: string
        description: The build type (debug or release)
        default: 'release'
        required: false
      upload_artifact:
        type: boolean
        description: Upload Artifact to GitHub
        default: false
        required: false

jobs:

######################
###### Linux #########
######################

  linux:
    name: üêß ${{ matrix.os.description }}
    runs-on: ${{ matrix.os.architecture[0] == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          { distribution: debian, codename: bullseye, description: Debian Bullseye (x86_64),                      architecture: [ amd64, linux/amd64  ], platform: x11, qt_version: '6' },
          { distribution: debian, codename: bullseye, description: Debian Bullseye (Raspberry Pi 1 & Zero 1),     architecture: [ armv6, linux/arm/v6 ], platform: rpi, qt_version: '5' }, # Qt6 not available on Debian Bullseye (armv6)
          { distribution: debian, codename: bullseye, description: Debian Bullseye (Raspberry Pi 2),              architecture: [ armv7, linux/arm/v7 ], platform: rpi, qt_version: '6' },
          { distribution: debian, codename: bullseye, description: Debian Bullseye (Raspberry Pi 3/4/5 & Zero 2), architecture: [ arm64, linux/arm64  ], platform: rpi, qt_version: '6' },
          { distribution: debian, codename: bookworm, description: Debian Bookworm (x86_64),                      architecture: [ amd64, linux/amd64  ], platform: x11, qt_version: '6'},
          { distribution: debian, codename: bookworm, description: Debian Bookworm (Raspberry Pi 1 & Zero 1),     architecture: [ armv6, linux/arm/v6 ], platform: rpi, qt_version: '6' },
          { distribution: debian, codename: bookworm, description: Debian Bookworm (Raspberry Pi 2),              architecture: [ armv7, linux/arm/v7 ], platform: rpi, qt_version: '6' },
          { distribution: debian, codename: bookworm, description: Debian Bookworm (Raspberry Pi 3/4/5 & Zero 2), architecture: [ arm64, linux/arm64  ], platform: rpi, qt_version: '6' }
        ]

    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: ‚¨á Clone hyperion.ng repository
        uses: actions/checkout@v4
        with:
          repository: hyperion-project/hyperion.ng
          submodules: recursive
          path: hyperion

      - name: üë∑ Build
        shell: bash
        run: |
          mkdir deploy
          docker run --rm --platform=${{ matrix.os.architecture[1] }} ${{ env.ENTRYPOINT }} \
            -v "${{ github.workspace }}/deploy:/deploy" \
            -v "${{ github.workspace }}:/source:rw" \
            -w "/source" \
            ghcr.io/hyperion-project/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} \
            /bin/bash -c "cmake --preset linux-${{ inputs.build_type }} -DHYPERION_DIR=/source/hyperion -DPLATFORM=${{ matrix.os.platform }} &&
            cmake --build --preset linux-${{ inputs.build_type }} --target install --parallel $(nproc) &&
            cp -a /source/build/install/. /deploy/ 2>/dev/null"
        env:
          DOCKER_IMAGE: ${{ matrix.os.distribution }}
          DOCKER_TAG: ${{ matrix.os.codename }}${{ matrix.os.qt_version == '6' && '-qt6' || '' }}
          ENTRYPOINT: ${{ matrix.os.architecture[0] != 'amd64' && '--entrypoint /usr/bin/env' || '' }}

      - name: üì¶ Upload
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('{0}_{1}-{2}-qt{3}-{4}', matrix.os.distribution, matrix.os.codename, matrix.os.architecture[0], matrix.os.qt_version, inputs.build_type) }}
          path: deploy/*

######################
###### macOS #########
######################

  macos:
    name: üçè macOS ${{ matrix.architecture }}
    runs-on: ${{ matrix.architecture == 'arm64' && 'macos-14' || 'macos-13' }}
    strategy:
      fail-fast: false
      matrix:
        architecture: [ arm64, x64 ]

    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: ‚¨á Clone hyperion.ng repository
        uses: actions/checkout@v4
        with:
          repository: hyperion-project/hyperion.ng
          submodules: recursive
          path: hyperion

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8'
          target: 'desktop'
          cache: 'true'
          cache-key-prefix: 'cache-qt-macos'

      - name: üë∑ Build
        shell: bash
        run: |
          cmake --preset macos-${{ inputs.build_type }} -DHYPERION_DIR=${{ github.workspace }}/hyperion -DPLATFORM=macos
          cmake --build --preset macos-${{ inputs.build_type }} --target install --parallel $(sysctl -n hw.ncpu)

      - name: üì¶ Upload
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('macos-{0}-qt6-{1}', matrix.architecture, inputs.build_type) }}
          path: build/install/*

######################
###### Windows #######
######################

  windows:
    name: ü™ü Windows ${{ matrix.architecture }}
    runs-on: ${{ matrix.architecture == 'arm64' && 'windows-11-arm' || 'windows-2022' }}
    env:
      BUILD_TYPE: ${{ inputs.build_type == 'debug' && 'relwithdebinfo' || inputs.build_type }}
    strategy:
      fail-fast: false
      matrix:
        architecture: [ arm64, x64 ]

    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: ‚¨á Clone hyperion.ng repository
        uses: actions/checkout@v4
        with:
          repository: hyperion-project/hyperion.ng
          submodules: recursive
          path: hyperion

      - name: üì• Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.3'
          architecture: ${{ matrix.architecture }}

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.*'
          target: 'desktop'
          cache: 'true'
          cache-key-prefix: 'cache-qt-windows'
          setup-python: 'false'

      - name: üì• Install latest CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: üõ†Ô∏è Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.architecture }}
      
      - name: üõ†Ô∏è Setup NASM (x64)
        if: matrix.architecture == 'x64'
        uses: ilammy/setup-nasm@v1

      - name: üë∑ Build
        shell: cmd
        run: |
          cmake --preset windows-${{ env.BUILD_TYPE }} -DHYPERION_DIR=${{ github.workspace }}/hyperion -DPLATFORM=windows
          cmake --build --preset windows-${{ env.BUILD_TYPE }} --target install --parallel %NUMBER_OF_PROCESSORS%

      - name: üì¶ Upload
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('windows-{0}-qt6-{1}', matrix.architecture, env.BUILD_TYPE) }}
          path: build/install/*
